name: Build Android APK/AAB (Capacitor, cloud-only)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Java (for Gradle)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses & install tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" \
                     "platforms;android-34" "build-tools;34.0.0"

      - name: Init minimal Capacitor project (non-interactive)
        run: |
          mkdir app && cd app
          npm init -y
          npm i @capacitor/core @capacitor/cli @capacitor/android
          npx cap init "Quran Anywhere" com.ahadi.qurananywhere --web-dir=www --npm-client=npm
          # make www folder
          mkdir -p www/assets www/icons
          # fetch your live site into www (so the app works offline)
          node - <<'NODE'
          import fs from 'fs'; import https from 'https'; import {URL} from 'url'; import path from 'path';
          const base = 'https://ahadi332211.github.io/quran-anywhere/';
          const files = [
            '', 'styles.css', 'app.js', 'manifest.json', 'sw.js',
            'assets/surah_names.json', 'assets/pashto-farsi.json', 'assets/juznames.json',
            'icons/icon-192.png', 'icons/icon-512.png'
          ];
          const out = 'www';
          const get = (u) => new Promise((resolve, reject)=>{
            https.get(u, (res)=>{
              if (res.statusCode >=300 && res.statusCode<400 && res.headers.location){
                return resolve(get(new URL(res.headers.location, u).toString()));
              }
              if (res.statusCode!==200){ return reject(new Error('HTTP '+res.statusCode+' for '+u)); }
              const chunks=[]; res.on('data',d=>chunks.push(d)); res.on('end',()=>resolve(Buffer.concat(chunks)));
            }).on('error', reject);
          });
          (async ()=>{
            for (const rel of files){
              const url = new URL(rel || '', base).toString();
              const dest = path.join(out, rel || 'index.html');
              fs.mkdirSync(path.dirname(dest), {recursive:true});
              const buf = await get(url);
              fs.writeFileSync(dest, buf);
              console.log('Fetched', url, '->', dest);
            }
            console.log('Done fetch.');
          })().catch(e=>{ console.error(e); process.exit(1); });
          NODE

          # Create basic capacitor.config.json (locks webDir and dark theme)
          cat > capacitor.config.json <<'JSON'
          {
            "appId": "com.ahadi.qurananywhere",
            "appName": "Quran Anywhere",
            "webDir": "www",
            "bundledWebRuntime": false,
            "server": { "androidScheme": "https" }
          }
          JSON

          npx cap add android
          npx cap copy

      - name: Build release AAB/APK
        working-directory: ./app/android
        run: |
          ./gradlew --version
          ./gradlew :app:bundleRelease :app:assembleRelease --stacktrace --no-daemon

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-capacitor-build
          path: |
            app/android/app/build/outputs/bundle/release/*.aab
            app/android/app/build/outputs/apk/release/*.apk
